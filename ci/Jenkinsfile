pipeline {
  agent {
    node {
      label 'docker-c5-xlarge'
    }
  }

  environment {
    npm_config_cache = "npm-cache"
  }

  options {
    timestamps()
  }

  stages {
    stage('Build') {
      steps {
        echo 'Starting Docker Container'
        withDockerContainer(image: 'node:10') {
          echo 'Installing dependencies'
          sh 'npm install'

          // Required dependency patch to build
          // Jenkins requires the escape character to be escaped to escape a character
          echo 'Patching dependency'
          sh 'sed -i "/node:/c\\\\node: { crypto: true, stream: true, fs: \\\'empty\\\', net: \\\'empty\\\', tls: \\\'empty\\\'}" ./node_modules/@angular-devkit/build-angular/src/angular-cli-files/models/webpack-configs/browser.js'

          echo 'Building for Doc-On-Chain Dev Web Wallet'
          sh 'npm run build:optimizer-testnet'
          sh "tar cJfv doc-dev-web-wallet-${env.BUILD_NUMBER}.tar.xz dist"
        }
        echo 'Leaving Container'
      }

      post {
        failure {
          slackSend channel: '#devops',
            color: 'bad',
            message: "Branch *${env.GIT_BRANCH}* build of *${currentBuild.fullDisplayName}* FAILED :scream:"
        }
      }
    }

    stage('Archive Artifact') {
      steps {
        echo 'Archiving Artifact'
        archiveArtifacts "doc-dev-web-wallet-${env.BUILD_NUMBER}.tar.xz"
      }
      post {
        success {
          slackSend channel: '#devops',
            color: 'good',
            message:  "Branch *${env.GIT_BRANCH}* build of *${currentBuild.fullDisplayName}* completed successfully :100:\nArtifact stored in S3"
        }
      }
    }
  }
}
